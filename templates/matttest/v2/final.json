{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "headNodeSku": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "Size of VM for the head node."
      }
    },
    "engineNodeSku": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "Size of VMs for the engine nodes."
      }
    },
    "uniquePrefix":{
      "type":"string",
      "metadata":{
        "description":"String used as a base for naming resources."
      },
      "maxLength": 61
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of engine nodes (20 or less)."
      },
      "maxValue": 19
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    }
  },
  "variables": {
    "namingInfix": "[toLower(substring(concat(parameters('uniquePrefix'), uniqueString(resourceGroup().id)), 0, 9))]",
    "longNamingInfix": "[toLower(parameters('uniquePrefix'))]",
    "headNodeName": "[concat(variables('namingInfix'), 'hn')]",
    "saName": "[concat(variables('newStorageAccountSuffix'), 'sa')]",
    "headNodeOSDiskName": "[concat(variables('headNodeName'), 'osdisk')]",
    "headNodeIPConfigName": "[concat(variables('headNodeName'), 'ipconfig')]",
    "headNodeNicName": "[concat(variables('headNodeName'), 'nic')]",
    "storageAccountType": "Standard_LRS",
    "newStorageAccountSuffix": "[concat(variables('namingInfix'), 'sa')]",
    "osDiskName": "[concat(variables('namingInfix'), 'osdisk')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "virtualNetworkName": "[concat(variables('namingInfix'), 'vnet')]",
    "subnetName": "[concat(variables('namingInfix'), 'subnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "publicIPAddressName": "[concat(variables('namingInfix'), 'pip')]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "nicName": "[concat(variables('namingInfix'), 'nic')]",
    "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
    "computeApiVersion": "2016-03-30",
    "networkApiVersion": "2016-03-30",
    "storageApiVersion": "2015-06-15",
    "templateLocation": "https://raw.githubusercontent.com/AlanSt/scratch/master/templates/matttest/v2/",
    "engineScript": "[concat(variables('templateLocation'), 'engine.sh')]",
    "hnScript":  "[concat(variables('templateLocation'), 'headnode.sh')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('networkApiVersion')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('longNamingInfix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('headNodeNicName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('networkApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[variables('headNodeIPConfigName')]",
            "properties": {
              "PrivateIpAddress": "10.0.0.100",
              "PrivateIpAllocationMethod": "Static",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('longNamingInfix'), 'nic', padLeft(copyindex(), 2, '0'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('instanceCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('headNodeName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('computeApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('headNodeNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('headNodeSku')]"
        },
        "osProfile": {
          "computerName": "[variables('headNodeName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(variables('headNodeName'),'-osDisk')]",
            "osType": "Linux",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "[concat('https://',variables('saName'),'.blob.core.windows.net/vhdimage/tibcotest.vhd')]"
            },
            "vhd": {
              "uri": "[concat('https://',variables('saName'),'.blob.core.windows.net/vhds/',variables('headNodeName'),'-osDisk.vhd')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('headNodeNicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('headNodeName'),'/hnstart')]",
      "apiVersion": "[variables('computeApiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('headNodeName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.5",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('hnScript')]"  
          ],  
          "commandToExecute": "bash headnode.sh"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('longNamingInfix'), 'engine', padLeft(copyIndex(), 2, '0'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('instanceCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('longNamingInfix'), 'nic', padLeft(copyindex(), 2, '0'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('engineNodeSku')]"
        },
        "osProfile": {
          "computername": "[concat(variables('longNamingInfix'), 'vm', padLeft(copyIndex(), 2, '0'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(variables('longNamingInfix'), 'vm', padLeft(copyIndex(), 2, '0'),'-osDisk')]",
            "osType": "Linux",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "[concat('https://',variables('saName'),'.blob.core.windows.net/vhdimage/tibcotest.vhd')]"
            },
            "vhd": {
              "uri": "[concat('https://',variables('saName'),'.blob.core.windows.net/vhds/',variables('longNamingInfix'), padLeft(copyIndex(), 2, '0'), '-osDisk.vhd')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('longNamingInfix'), 'nic', padLeft(copyindex(), 2, '0')))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('longNamingInfix'), 'engine', padLeft(copyIndex(), 2, '0'),'/enginestart')]",
      "apiVersion": "[variables('computeApiVersion')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "extensionLoop",
        "count": "[parameters('instanceCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('longNamingInfix'), 'engine', padLeft(copyIndex(), 2, '0'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('headNodeName'),'/extensions/hnstart')]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.5",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('engineScript')]"  
          ],  
          "commandToExecute": "[concat('bash engine.sh ', reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.internalFqdn)]"
        }
      }
    }
  ]
}


